{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sidiq\\\\Documents\\\\Aido Health\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport { API } from \"./config/api\";\nimport TableRowAxios from \"./components/TableRowAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AxiosComponent() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [idForUpdate, setIdForUpdate] = useState(null);\n  const [form, setForm] = useState({\n    title: \"\",\n    isDone: \"true\"\n  });\n  const {\n    title,\n    isDone\n  } = form; // LOAD/READ DATA\n\n  const loadTodos = async () => {\n    try {\n      const response = await API.get(\"/todos\");\n      setTodos(response.data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, [todos]); // ADD DATA\n\n  const onChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const body = JSON.stringify({\n        title,\n        isDone: isDone === \"true\" ? true : false\n      });\n      const response = await API.post(\"/todo\", body, config);\n      setForm({\n        title: \"\",\n        isDone: \"true\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // DELETE DATA\n\n\n  const deleteTodoById = async id => {\n    try {\n      await API.delete(`/todo/${id}`);\n      const updateTodo = todos.filter(todo => todo.id !== id);\n      setTodos(updateTodo);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // UPDATE DATA\n\n\n  const getTodoById = async id => {\n    try {\n      const response = await API.get(`/todo/${id}`);\n      const todo = response.data.data;\n      setIdForUpdate(todo.id);\n      setForm({\n        title: todo.title ? todo.title : \"\",\n        isDone: todo.isDone ? \"true\" : \"false\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateTodo = async () => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const body = JSON.stringify({\n        title,\n        isDone: isDone === \"true\" ? true : false\n      });\n      const response = await API.patch(`/todo/${idForUpdate}`, body, config);\n      setIdForUpdate(null);\n      setForm({\n        title: \"\",\n        isDone: \"true\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n\n          if (idForUpdate) {\n            updateTodo(); //update data\n          } else {\n            handleSubmit(); //add data\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: [\"Form \", idForUpdate ? \"Edit\" : \"Add\", \" Todo (Axios)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: title,\n            onChange: e => onChange(e),\n            name: \"title\",\n            type: \"text\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"isDone\",\n            value: isDone,\n            onChange: e => onChange(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-primary btn-block\",\n            disabled: !title || !isDone ? true : false,\n            children: [idForUpdate ? \"Edit\" : \"Submit\", \" Todo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 row\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-sm table-bordered table-striped table-hovered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(TableRowAxios, {\n            todo: todo,\n            index: index,\n            getTodoById: getTodoById,\n            deleteTodoById: deleteTodoById\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AxiosComponent, \"/C/gMC7psfwu4DgxsikPDoyakrY=\");\n\n_c = AxiosComponent;\nexport default AxiosComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AxiosComponent\");","map":{"version":3,"sources":["C:/Users/Sidiq/Documents/Aido Health/client/src/App.js"],"names":["useContext","useState","useEffect","API","TableRowAxios","AxiosComponent","todos","setTodos","idForUpdate","setIdForUpdate","form","setForm","title","isDone","loadTodos","response","get","data","error","console","log","onChange","e","target","name","value","handleSubmit","config","headers","body","JSON","stringify","post","deleteTodoById","id","delete","updateTodo","filter","todo","getTodoById","patch","preventDefault","map","index"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC/BW,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,MAAM,EAAE;AAFuB,GAAD,CAAhC;AAKA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBH,IAA1B,CARwB,CAUxB;;AACA,QAAMI,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAQ,QAAR,CAAvB;AACAT,MAAAA,QAAQ,CAACQ,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAR;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAPD;;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACR,KAAD,CAFM,CAAT,CApBwB,CAwBxB;;AACA,QAAMe,QAAQ,GAAIC,CAAD,IAAO;AACtBX,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACY,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFpB,KAAD,CAAP;AAID,GALD;;AAOA,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADI,OAAf;AAMA,YAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BnB,QAAAA,KAD0B;AAE1BC,QAAAA,MAAM,EAAEA,MAAM,KAAK,MAAX,GAAoB,IAApB,GAA2B;AAFT,OAAf,CAAb;AAKA,YAAME,QAAQ,GAAG,MAAMZ,GAAG,CAAC6B,IAAJ,CAAS,OAAT,EAAkBH,IAAlB,EAAwBF,MAAxB,CAAvB;AAEAhB,MAAAA,OAAO,CAAC;AACNC,QAAAA,KAAK,EAAE,EADD;AAENC,QAAAA,MAAM,EAAE;AAFF,OAAD,CAAP;AAID,KAlBD,CAkBE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAtBD,CAhCwB,CAwDxB;;;AACA,QAAMe,cAAc,GAAG,MAAOC,EAAP,IAAc;AACnC,QAAI;AACF,YAAM/B,GAAG,CAACgC,MAAJ,CAAY,SAAQD,EAAG,EAAvB,CAAN;AAEA,YAAME,UAAU,GAAG9B,KAAK,CAAC+B,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAnC,CAAnB;AAEA3B,MAAAA,QAAQ,CAAC6B,UAAD,CAAR;AACD,KAND,CAME,OAAOlB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAVD,CAzDwB,CAqExB;;;AACA,QAAMqB,WAAW,GAAG,MAAOL,EAAP,IAAc;AAChC,QAAI;AACF,YAAMnB,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAS,SAAQkB,EAAG,EAApB,CAAvB;AACA,YAAMI,IAAI,GAAGvB,QAAQ,CAACE,IAAT,CAAcA,IAA3B;AACAR,MAAAA,cAAc,CAAC6B,IAAI,CAACJ,EAAN,CAAd;AAEAvB,MAAAA,OAAO,CAAC;AACNC,QAAAA,KAAK,EAAE0B,IAAI,CAAC1B,KAAL,GAAa0B,IAAI,CAAC1B,KAAlB,GAA0B,EAD3B;AAENC,QAAAA,MAAM,EAAEyB,IAAI,CAACzB,MAAL,GAAc,MAAd,GAAuB;AAFzB,OAAD,CAAP;AAID,KATD,CASE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAbD;;AAeA,QAAMkB,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMT,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADI,OAAf;AAMA,YAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BnB,QAAAA,KAD0B;AAE1BC,QAAAA,MAAM,EAAEA,MAAM,KAAK,MAAX,GAAoB,IAApB,GAA2B;AAFT,OAAf,CAAb;AAKA,YAAME,QAAQ,GAAG,MAAMZ,GAAG,CAACqC,KAAJ,CAAW,SAAQhC,WAAY,EAA/B,EAAkCqB,IAAlC,EAAwCF,MAAxC,CAAvB;AAEAlB,MAAAA,cAAc,CAAC,IAAD,CAAd;AAEAE,MAAAA,OAAO,CAAC;AACNC,QAAAA,KAAK,EAAE,EADD;AAENC,QAAAA,MAAM,EAAE;AAFF,OAAD,CAAP;AAID,KApBD,CAoBE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAxBD;;AA0BA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AACE,QAAA,QAAQ,EAAGI,CAAD,IAAO;AACfA,UAAAA,CAAC,CAACmB,cAAF;;AAEA,cAAIjC,WAAJ,EAAiB;AACf4B,YAAAA,UAAU,GADK,CACD;AACf,WAFD,MAEO;AACLV,YAAAA,YAAY,GADP,CACW;AACjB;AACF,SATH;AAAA,gCAWE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,8BACQlB,WAAW,GAAG,MAAH,GAAY,KAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,KAAK,EAAEI,KADT;AAEE,YAAA,QAAQ,EAAGU,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAF3B;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,IAAI,EAAC,MAJP;AAKE,YAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAwBE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAET,MAHT;AAIE,YAAA,QAAQ,EAAGS,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAJ3B;AAAA,oCAME;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,eAoCE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,kCADZ;AAEE,YAAA,QAAQ,EAAE,CAACV,KAAD,IAAU,CAACC,MAAX,GAAoB,IAApB,GAA2B,KAFvC;AAAA,uBAIGL,WAAW,GAAG,MAAH,GAAY,QAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAgDE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,2DAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,oBACGF,KAAK,CAACoC,GAAN,CAAU,CAACJ,IAAD,EAAOK,KAAP,kBACT,QAAC,aAAD;AACE,YAAA,IAAI,EAAEL,IADR;AAEE,YAAA,KAAK,EAAEK,KAFT;AAIE,YAAA,WAAW,EAAEJ,WAJf;AAKE,YAAA,cAAc,EAAEN;AALlB,aAGOK,IAAI,CAACJ,EAHZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhDF;AAAA,kBADF;AA0ED;;GAzLQ7B,c;;KAAAA,c;AA2LT,eAAeA,cAAf","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\n\nimport { API } from \"./config/api\";\n\nimport TableRowAxios from \"./components/TableRowAxios\";\n\nfunction AxiosComponent() {\n  const [todos, setTodos] = useState([]);\n  const [idForUpdate, setIdForUpdate] = useState(null);\n  const [form, setForm] = useState({\n    title: \"\",\n    isDone: \"true\",\n  });\n\n  const { title, isDone } = form;\n\n  // LOAD/READ DATA\n  const loadTodos = async () => {\n    try {\n      const response = await API.get(\"/todos\");\n      setTodos(response.data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, [todos]);\n\n  // ADD DATA\n  const onChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        title,\n        isDone: isDone === \"true\" ? true : false,\n      });\n\n      const response = await API.post(\"/todo\", body, config);\n\n      setForm({\n        title: \"\",\n        isDone: \"true\",\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // DELETE DATA\n  const deleteTodoById = async (id) => {\n    try {\n      await API.delete(`/todo/${id}`);\n\n      const updateTodo = todos.filter((todo) => todo.id !== id);\n\n      setTodos(updateTodo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // UPDATE DATA\n  const getTodoById = async (id) => {\n    try {\n      const response = await API.get(`/todo/${id}`);\n      const todo = response.data.data;\n      setIdForUpdate(todo.id);\n\n      setForm({\n        title: todo.title ? todo.title : \"\",\n        isDone: todo.isDone ? \"true\" : \"false\",\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateTodo = async () => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify({\n        title,\n        isDone: isDone === \"true\" ? true : false,\n      });\n\n      const response = await API.patch(`/todo/${idForUpdate}`, body, config);\n\n      setIdForUpdate(null);\n\n      setForm({\n        title: \"\",\n        isDone: \"true\",\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"mt-2 mb-3\">\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            if (idForUpdate) {\n              updateTodo(); //update data\n            } else {\n              handleSubmit(); //add data\n            }\n          }}\n        >\n          <h3 className=\"text-center\">\n            Form {idForUpdate ? \"Edit\" : \"Add\"} Todo (Axios)\n          </h3>\n          <div className=\"form-group\">\n            <label>Title</label>\n            <input\n              value={title}\n              onChange={(e) => onChange(e)}\n              name=\"title\"\n              type=\"text\"\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Active</label>\n            <select\n              className=\"form-control\"\n              name=\"isDone\"\n              value={isDone}\n              onChange={(e) => onChange(e)}\n            >\n              <option value=\"true\">True</option>\n              <option value=\"false\">False</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <button\n              className=\"btn btn-sm btn-primary btn-block\"\n              disabled={!title || !isDone ? true : false}\n            >\n              {idForUpdate ? \"Edit\" : \"Submit\"} Todo\n            </button>\n          </div>\n        </form>\n      </div>\n      <div className=\"mt-3 row\">\n        <table className=\"table table-sm table-bordered table-striped table-hovered\">\n          <thead>\n            <tr>\n              <th>No</th>\n              <th>Title</th>\n              <th>Active</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {todos.map((todo, index) => (\n              <TableRowAxios\n                todo={todo}\n                index={index}\n                key={todo.id}\n                getTodoById={getTodoById}\n                deleteTodoById={deleteTodoById}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AxiosComponent;\n"]},"metadata":{},"sourceType":"module"}